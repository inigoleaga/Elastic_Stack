input {
  beats {
    port => 3333
    tags => ["apt_history"]
  }
}

filter {
  if "apt_history" in [tags] { #and "/var/log/apt/history.log" in [log.file.path] {
    grok {
      match => {
        "message" => "\nUpgrade:\s%{GREEDYDATA:upgraded_packages}\n"
      }
      add_tag => ["upgrade"]
      tag_on_failure => ["no_upgrade"]
    }
    grok {
      match => {
        "message" => "\nInstall:\s%{GREEDYDATA:installed_packages}\n"
      }
      add_tag => ["install"]
      tag_on_failure => ["no_install"]
    }
    grok {
      match => {
        "message" => "\nError:\s%{GREEDYDATA:failed_packages}\n"
      }
      add_tag => ["error"]
      tag_on_failure => ["no_error"]
    }
    grok {
      match => {
        "message" => "\nRemove:\s%{GREEDYDATA:removed_packages}\n"
      }
      add_tag => ["remove"]
      tag_on_failure => ["no_removed"]
    }
    grok {
      match => {
        "message" => "\nCommandline:\s%{GREEDYDATA:command}\n"
      }
    }
    grok {
      match => {
        "message" => "\nRequested-By:\s%{WORD:user}"
      }
      tag_on_failure => ["unattended_upgrade"]
    }

    mutate {
      split => {
        "installed_packages" => "), "
      }
      split => {
        "upgraded_packages" => "), "
      }
      split => {
        "removed_packages" => "), "
      }
      split => {
        "failed_packages" => "), "
      }
    }
  }
}

output {
  if "apt_history" in [tags] {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "apt_history-%{+YYY.MM.dd}"
    }
  }
}

